@using Microsoft.AspNetCore.Identity
@model UsersShowUserViewModel

@{
    var loggedInUser = Model.LoggedInUser;
    bool isListening = loggedInUser != null && loggedInUser.ListeningTo != null &&
                       loggedInUser.ListeningTo.Any(l => l.Id == Model.User.Id);
}

<div>
    @if (Model.User != null)
    {
        <h1>Broadcasts from @Model.User.Name</h1>

        @if (loggedInUser != null && loggedInUser.Id != Model.User.Id)
        {
            <div>
                @Html.AntiForgeryToken() 
                @if (!isListening)
                {
                    <button id="listenButton" onclick="handleListen('@Model.User.Id', true)">Follow @Model.User.Name</button>
                }
                else
                {
                    <button id="unlistenButton" onclick="handleListen('@Model.User.Id', false)">Unfollow @Model.User.Name</button>
                }
            </div>
        }
    }
    else
    {
        ViewData["Title"] = "User not found";
        <h1>User not found</h1>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
</div>

@if (Model.User != null)
{
    @foreach (var broadcast in Model.Broadcasts)
    {
        <p>
            <b>@broadcast.Published.ToShortDateString() @broadcast.Published.ToShortTimeString()</b>:
            @broadcast.Message
        </p>

        @if (!string.IsNullOrEmpty(broadcast.ImagePath))
        {
            <div>
                <img src="@broadcast.ImagePath" alt="Broadcast image" style="max-width: 30%; height: auto;" />
            </div>
        }
    }
}


<script src="~/js/site.js"></script>
