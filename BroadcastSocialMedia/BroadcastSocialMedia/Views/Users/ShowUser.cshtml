@using Microsoft.AspNetCore.Identity
@model UsersShowUserViewModel

@{
    var loggedInUser = Model.LoggedInUser; // Access the logged-in user from the view model
    ViewData["Title"] = Model.User.Name;
    bool isListening = loggedInUser != null && loggedInUser.ListeningTo.Any(l => l.Id == Model.User.Id);  // Correct check if already listening
}

<div>
    <h1>Broadcasts from @Model.User.Name</h1>

    @if (loggedInUser != null && loggedInUser.Id != Model.User.Id)
    {
        @if (!isListening)
        {
            <form action="/Users/Listen" method="post">
                <input type="hidden" name="UserId" value="@Model.User.Id" />
                <input type="submit" value="Listen to" />
            </form>
        }
        else
        {
            <form action="/Users/Unlisten" method="post">
                <input type="hidden" name="UserId" value="@Model.User.Id" />
                <input type="submit" value="Stop Listening" />
            </form>
        }
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
</div>

@foreach (var broadcast in Model.Broadcasts)
{
    <p>
        <b>@broadcast.Published.ToShortDateString() @broadcast.Published.ToShortTimeString()</b>:
        @broadcast.Message
    </p>
}
